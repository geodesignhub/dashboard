<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Geodesignhub Dashboard</title>
    <link href='https://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Raleway' rel='stylesheet' type='text/css'>
    <link href='assets/css/jquery.dataTables.min.css' rel='stylesheet' type='text/css'>
    <link href='assets/css/buttons.dataTables.min.css' rel='stylesheet' type='text/css'>
    <link href='assets/css/flatty.css' rel='stylesheet' type='text/css'>
    <link href='assets/css/base.css' rel='stylesheet' type='text/css'>
    <style type="text/css">
        #wrapper {
            width: 1200px;
            margin: 0 auto;
            overflow: hidden;
        }

        .pull-right {
            float: right;
        }

        a {
            color: #00AED8;
        }

        a:hover {
            color: #00AED8;
        }

        section {
            padding-top: 20px;
        }

        .herounit {
            background: #E5E4E2;
            padding-bottom: 25px;
        }
    </style>
</head>

<body>

    <div class='herounit'>
        <div class="container">
            <!-- Static navbar -->
            <!-- Main component for a primary marketing message or call to action -->
            <br>
            <h1>Geodesignhub Dashboard</h1>
            <br>
            <p>This is a text based dashboard of your Geodesignhub project via the <a
                    href="http://www.geodesignhub.com/api/" target="_blank">Geodesignhub API</a> experiment to. In
                addition to showing the text based information about the individual diagrams, diagram notes can be
                displayed as well. For more information, see the <a
                    href="https://geodesignhub.github.io/dashboard">Github</a> page.</p><br>


        </div>
    </div>
    <br>
    <div class="container">

        <section>

            <br>
            <h2><span>Project Diagram grid</span> <span class="pull-right"><a
                        href="/diagrams?projectid=<%= project_id %>&apitoken=<%= api_token %>">See Diagram Details
                        â†’</a></span></h2>
            <br><br>
            <table id="dTable" class="cell-border display"></table>
        </section>


        <section>
            <br>
            <br>
        </section>


    </div>
    <script src="assets/js/jquery.min.js"></script>
    <script type="text/javascript" src="assets/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="assets/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="assets/js/buttons.html5.min.js"></script>
    <script type="text/javascript" src="assets/js/buttons.print.min.js"></script>
    <script src="assets/js/humane.min.js"></script>
    <script type="text/javascript">
        var dataTable;
        let data = <%- JSON.stringify(data) %>;
        var status = <%- status %>;
        if (status) {

            populateDesignGrid(data[0], data[1]);
            humane.log("Project Data populated", {
                addnCls: 'humane-flatty-success'
            });

        } else {
            humane.log("Error in getting project data. Please check your project id and credentials.", {
                addnCls: 'humane-flatty-error'
            });

        }


        function populateDesignGrid(systems, diagrams) {
            const fields = systems.map(system => ({
            title: system.sysname,
            width: "15%"
            }));

            const allRanks = diagrams.map(diagram => diagram.rank);
            const numRows = Math.max(...allRanks);

            const emptyDataset = Array.from({ length: numRows }, () => Array(fields.length).fill(''));

            diagrams.forEach(diagram => {
            const diagRow = diagram.rank - 1;
            const column = systems.findIndex(system => system.id === diagram.sysid);

            if (column !== -1) {
                emptyDataset[diagRow][column] = `
                <b>${diagram.rank}</b>&nbsp;&nbsp;${diagram.worlddescription}
                <br><small>Author&nbsp;:&nbsp;${diagram.author}&nbsp;&nbsp;&nbsp;&nbsp; ID: ${diagram.id}</small>
                `;
            }
            });

            if (dataTable) {
            dataTable.destroy();
            }

            dataTable = $("#dTable").DataTable({
            dom: 'Bfrtip',
            buttons: [{
                extend: 'copy',
                className: 'button',
                text: 'Copy to clipboard'
            }],
            ordering: false,
            searching: true,
            autoWidth: false,
            paging: true,
            info: false,
            lengthMenu: [100],
            data: emptyDataset,
            columns: fields
            });
        }
    </script>
</body>

</html>